{"timestamp":"2024-12-16T23:35:08.673Z","level":"error","message":"Internal Server Error","meta":{"stack":"PrismaClientValidationError: \nInvalid `prisma.user.findFirst()` invocation in\nC:\\Users\\hp\\Desktop\\ecoserver\\routes\\client\\auth.js:122:36\n\n  119 authRoute.get('/user', verifyJwtTokenClients.clientOnly(), asyncError(async (req, res) => {\n  120     const userID = req.user?.user_id\n  121 \n→ 122     const user = await prisma.user.findFirst({\n            where: {\n              id: \"f671c197-8765-43b8-9f4a-be6f02f41e79\"\n            },\n            include: {\n              orders: {\n                include: {\n                  onlinePaymentHistory: true,\n                  ~~~~~~~~~~~~~~~~~~~~\n          ?       order_items?: true,\n          ?       coupon?: true,\n          ?       pickup_location?: true,\n          ?       User?: true\n                }\n              },\n              address: true\n            }\n          })\n\nUnknown field `onlinePaymentHistory` for include statement on model `Order`. Available options are marked with ?.\n    at wn (C:\\Users\\hp\\Desktop\\ecoserver\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at $n.handleRequestError (C:\\Users\\hp\\Desktop\\ecoserver\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at $n.handleAndLogRequestError (C:\\Users\\hp\\Desktop\\ecoserver\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Users\\hp\\Desktop\\ecoserver\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Users\\hp\\Desktop\\ecoserver\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async C:\\Users\\hp\\Desktop\\ecoserver\\routes\\client\\auth.js:122:18","method":"GET","path":"/client/auth/user"}}

{"timestamp":"2024-12-16T23:35:09.695Z","level":"error","message":"Internal Server Error","meta":{"stack":"PrismaClientValidationError: \nInvalid `prisma.user.findFirst()` invocation in\nC:\\Users\\hp\\Desktop\\ecoserver\\routes\\client\\auth.js:122:36\n\n  119 authRoute.get('/user', verifyJwtTokenClients.clientOnly(), asyncError(async (req, res) => {\n  120     const userID = req.user?.user_id\n  121 \n→ 122     const user = await prisma.user.findFirst({\n            where: {\n              id: \"f671c197-8765-43b8-9f4a-be6f02f41e79\"\n            },\n            include: {\n              orders: {\n                include: {\n                  onlinePaymentHistory: true,\n                  ~~~~~~~~~~~~~~~~~~~~\n          ?       order_items?: true,\n          ?       coupon?: true,\n          ?       pickup_location?: true,\n          ?       User?: true\n                }\n              },\n              address: true\n            }\n          })\n\nUnknown field `onlinePaymentHistory` for include statement on model `Order`. Available options are marked with ?.\n    at wn (C:\\Users\\hp\\Desktop\\ecoserver\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at $n.handleRequestError (C:\\Users\\hp\\Desktop\\ecoserver\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at $n.handleAndLogRequestError (C:\\Users\\hp\\Desktop\\ecoserver\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Users\\hp\\Desktop\\ecoserver\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Users\\hp\\Desktop\\ecoserver\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async C:\\Users\\hp\\Desktop\\ecoserver\\routes\\client\\auth.js:122:18","method":"GET","path":"/client/auth/user"}}

{"timestamp":"2024-12-16T23:35:11.710Z","level":"error","message":"Internal Server Error","meta":{"stack":"PrismaClientValidationError: \nInvalid `prisma.user.findFirst()` invocation in\nC:\\Users\\hp\\Desktop\\ecoserver\\routes\\client\\auth.js:122:36\n\n  119 authRoute.get('/user', verifyJwtTokenClients.clientOnly(), asyncError(async (req, res) => {\n  120     const userID = req.user?.user_id\n  121 \n→ 122     const user = await prisma.user.findFirst({\n            where: {\n              id: \"f671c197-8765-43b8-9f4a-be6f02f41e79\"\n            },\n            include: {\n              orders: {\n                include: {\n                  onlinePaymentHistory: true,\n                  ~~~~~~~~~~~~~~~~~~~~\n          ?       order_items?: true,\n          ?       coupon?: true,\n          ?       pickup_location?: true,\n          ?       User?: true\n                }\n              },\n              address: true\n            }\n          })\n\nUnknown field `onlinePaymentHistory` for include statement on model `Order`. Available options are marked with ?.\n    at wn (C:\\Users\\hp\\Desktop\\ecoserver\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at $n.handleRequestError (C:\\Users\\hp\\Desktop\\ecoserver\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at $n.handleAndLogRequestError (C:\\Users\\hp\\Desktop\\ecoserver\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Users\\hp\\Desktop\\ecoserver\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Users\\hp\\Desktop\\ecoserver\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async C:\\Users\\hp\\Desktop\\ecoserver\\routes\\client\\auth.js:122:18","method":"GET","path":"/client/auth/user"}}

{"timestamp":"2024-12-16T23:35:30.650Z","level":"error","message":"Internal Server Error","meta":{"stack":"PrismaClientValidationError: \nInvalid `prisma.user.findFirst()` invocation in\nC:\\Users\\hp\\Desktop\\ecoserver\\routes\\client\\auth.js:122:36\n\n  119 authRoute.get('/user', verifyJwtTokenClients.clientOnly(), asyncError(async (req, res) => {\n  120     const userID = req.user?.user_id\n  121 \n→ 122     const user = await prisma.user.findFirst({\n            where: {\n              id: \"f671c197-8765-43b8-9f4a-be6f02f41e79\"\n            },\n            include: {\n              orders: {\n                include: {\n                  onlinePaymentHistory: true,\n                  ~~~~~~~~~~~~~~~~~~~~\n          ?       order_items?: true,\n          ?       coupon?: true,\n          ?       pickup_location?: true,\n          ?       User?: true\n                }\n              },\n              address: true\n            }\n          })\n\nUnknown field `onlinePaymentHistory` for include statement on model `Order`. Available options are marked with ?.\n    at wn (C:\\Users\\hp\\Desktop\\ecoserver\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at $n.handleRequestError (C:\\Users\\hp\\Desktop\\ecoserver\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at $n.handleAndLogRequestError (C:\\Users\\hp\\Desktop\\ecoserver\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Users\\hp\\Desktop\\ecoserver\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Users\\hp\\Desktop\\ecoserver\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async C:\\Users\\hp\\Desktop\\ecoserver\\routes\\client\\auth.js:122:18","method":"GET","path":"/client/auth/user"}}

{"timestamp":"2024-12-16T23:35:32.128Z","level":"error","message":"Internal Server Error","meta":{"stack":"PrismaClientValidationError: \nInvalid `prisma.user.findFirst()` invocation in\nC:\\Users\\hp\\Desktop\\ecoserver\\routes\\client\\auth.js:122:36\n\n  119 authRoute.get('/user', verifyJwtTokenClients.clientOnly(), asyncError(async (req, res) => {\n  120     const userID = req.user?.user_id\n  121 \n→ 122     const user = await prisma.user.findFirst({\n            where: {\n              id: \"f671c197-8765-43b8-9f4a-be6f02f41e79\"\n            },\n            include: {\n              orders: {\n                include: {\n                  onlinePaymentHistory: true,\n                  ~~~~~~~~~~~~~~~~~~~~\n          ?       order_items?: true,\n          ?       coupon?: true,\n          ?       pickup_location?: true,\n          ?       User?: true\n                }\n              },\n              address: true\n            }\n          })\n\nUnknown field `onlinePaymentHistory` for include statement on model `Order`. Available options are marked with ?.\n    at wn (C:\\Users\\hp\\Desktop\\ecoserver\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at $n.handleRequestError (C:\\Users\\hp\\Desktop\\ecoserver\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at $n.handleAndLogRequestError (C:\\Users\\hp\\Desktop\\ecoserver\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Users\\hp\\Desktop\\ecoserver\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Users\\hp\\Desktop\\ecoserver\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async C:\\Users\\hp\\Desktop\\ecoserver\\routes\\client\\auth.js:122:18","method":"GET","path":"/client/auth/user"}}

{"timestamp":"2024-12-16T23:35:33.156Z","level":"error","message":"Internal Server Error","meta":{"stack":"PrismaClientValidationError: \nInvalid `prisma.user.findFirst()` invocation in\nC:\\Users\\hp\\Desktop\\ecoserver\\routes\\client\\auth.js:122:36\n\n  119 authRoute.get('/user', verifyJwtTokenClients.clientOnly(), asyncError(async (req, res) => {\n  120     const userID = req.user?.user_id\n  121 \n→ 122     const user = await prisma.user.findFirst({\n            where: {\n              id: \"f671c197-8765-43b8-9f4a-be6f02f41e79\"\n            },\n            include: {\n              orders: {\n                include: {\n                  onlinePaymentHistory: true,\n                  ~~~~~~~~~~~~~~~~~~~~\n          ?       order_items?: true,\n          ?       coupon?: true,\n          ?       pickup_location?: true,\n          ?       User?: true\n                }\n              },\n              address: true\n            }\n          })\n\nUnknown field `onlinePaymentHistory` for include statement on model `Order`. Available options are marked with ?.\n    at wn (C:\\Users\\hp\\Desktop\\ecoserver\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at $n.handleRequestError (C:\\Users\\hp\\Desktop\\ecoserver\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at $n.handleAndLogRequestError (C:\\Users\\hp\\Desktop\\ecoserver\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Users\\hp\\Desktop\\ecoserver\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Users\\hp\\Desktop\\ecoserver\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async C:\\Users\\hp\\Desktop\\ecoserver\\routes\\client\\auth.js:122:18","method":"GET","path":"/client/auth/user"}}

{"timestamp":"2024-12-16T23:35:35.174Z","level":"error","message":"Internal Server Error","meta":{"stack":"PrismaClientValidationError: \nInvalid `prisma.user.findFirst()` invocation in\nC:\\Users\\hp\\Desktop\\ecoserver\\routes\\client\\auth.js:122:36\n\n  119 authRoute.get('/user', verifyJwtTokenClients.clientOnly(), asyncError(async (req, res) => {\n  120     const userID = req.user?.user_id\n  121 \n→ 122     const user = await prisma.user.findFirst({\n            where: {\n              id: \"f671c197-8765-43b8-9f4a-be6f02f41e79\"\n            },\n            include: {\n              orders: {\n                include: {\n                  onlinePaymentHistory: true,\n                  ~~~~~~~~~~~~~~~~~~~~\n          ?       order_items?: true,\n          ?       coupon?: true,\n          ?       pickup_location?: true,\n          ?       User?: true\n                }\n              },\n              address: true\n            }\n          })\n\nUnknown field `onlinePaymentHistory` for include statement on model `Order`. Available options are marked with ?.\n    at wn (C:\\Users\\hp\\Desktop\\ecoserver\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at $n.handleRequestError (C:\\Users\\hp\\Desktop\\ecoserver\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at $n.handleAndLogRequestError (C:\\Users\\hp\\Desktop\\ecoserver\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Users\\hp\\Desktop\\ecoserver\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Users\\hp\\Desktop\\ecoserver\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async C:\\Users\\hp\\Desktop\\ecoserver\\routes\\client\\auth.js:122:18","method":"GET","path":"/client/auth/user"}}

