{"timestamp":"2025-01-31T20:31:01.966Z","level":"error","message":"Internal Server Error","meta":{"stack":"PrismaClientValidationError: \nInvalid `prisma.category.findMany()` invocation in\nC:\\Users\\hp\\Desktop\\ecoserver\\routes\\admin\\categoryAdminRoute.js:19:47\n\n  16 // Get All\n  17 categoryRoute.get(\n  18     '/all', verifyJwtTokenAdmins.adminCashier(), asyncError(async (req, res) => {\n→ 19         const allData = await prisma.category.findMany({\n               select: {\n                 name: true,\n                 id: true,\n                 image: true,\n                 _count: {\n                   select: {\n                     products: true,\n                     ~~~~~~~~\n             ?       Subcategory?: true\n                   }\n                 }\n               },\n               orderBy: {\n                 iat: \"desc\"\n               }\n             })\n\nUnknown field `products` for select statement on model `CategoryCountOutputType`. Available options are marked with ?.\n    at wn (C:\\Users\\hp\\Desktop\\ecoserver\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at $n.handleRequestError (C:\\Users\\hp\\Desktop\\ecoserver\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at $n.handleAndLogRequestError (C:\\Users\\hp\\Desktop\\ecoserver\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Users\\hp\\Desktop\\ecoserver\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Users\\hp\\Desktop\\ecoserver\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async C:\\Users\\hp\\Desktop\\ecoserver\\routes\\admin\\categoryAdminRoute.js:19:25","method":"GET","path":"/admin/category/all"}}

{"timestamp":"2025-01-31T20:31:03.053Z","level":"error","message":"Internal Server Error","meta":{"stack":"PrismaClientValidationError: \nInvalid `prisma.category.findMany()` invocation in\nC:\\Users\\hp\\Desktop\\ecoserver\\routes\\admin\\categoryAdminRoute.js:19:47\n\n  16 // Get All\n  17 categoryRoute.get(\n  18     '/all', verifyJwtTokenAdmins.adminCashier(), asyncError(async (req, res) => {\n→ 19         const allData = await prisma.category.findMany({\n               select: {\n                 name: true,\n                 id: true,\n                 image: true,\n                 _count: {\n                   select: {\n                     products: true,\n                     ~~~~~~~~\n             ?       Subcategory?: true\n                   }\n                 }\n               },\n               orderBy: {\n                 iat: \"desc\"\n               }\n             })\n\nUnknown field `products` for select statement on model `CategoryCountOutputType`. Available options are marked with ?.\n    at wn (C:\\Users\\hp\\Desktop\\ecoserver\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at $n.handleRequestError (C:\\Users\\hp\\Desktop\\ecoserver\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at $n.handleAndLogRequestError (C:\\Users\\hp\\Desktop\\ecoserver\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Users\\hp\\Desktop\\ecoserver\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Users\\hp\\Desktop\\ecoserver\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async C:\\Users\\hp\\Desktop\\ecoserver\\routes\\admin\\categoryAdminRoute.js:19:25","method":"GET","path":"/admin/category/all"}}

{"timestamp":"2025-01-31T20:31:05.101Z","level":"error","message":"Internal Server Error","meta":{"stack":"PrismaClientValidationError: \nInvalid `prisma.category.findMany()` invocation in\nC:\\Users\\hp\\Desktop\\ecoserver\\routes\\admin\\categoryAdminRoute.js:19:47\n\n  16 // Get All\n  17 categoryRoute.get(\n  18     '/all', verifyJwtTokenAdmins.adminCashier(), asyncError(async (req, res) => {\n→ 19         const allData = await prisma.category.findMany({\n               select: {\n                 name: true,\n                 id: true,\n                 image: true,\n                 _count: {\n                   select: {\n                     products: true,\n                     ~~~~~~~~\n             ?       Subcategory?: true\n                   }\n                 }\n               },\n               orderBy: {\n                 iat: \"desc\"\n               }\n             })\n\nUnknown field `products` for select statement on model `CategoryCountOutputType`. Available options are marked with ?.\n    at wn (C:\\Users\\hp\\Desktop\\ecoserver\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at $n.handleRequestError (C:\\Users\\hp\\Desktop\\ecoserver\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at $n.handleAndLogRequestError (C:\\Users\\hp\\Desktop\\ecoserver\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Users\\hp\\Desktop\\ecoserver\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Users\\hp\\Desktop\\ecoserver\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async C:\\Users\\hp\\Desktop\\ecoserver\\routes\\admin\\categoryAdminRoute.js:19:25","method":"GET","path":"/admin/category/all"}}

{"timestamp":"2025-01-31T21:21:22.748Z","level":"error","message":"Internal Server Error","meta":{"stack":"PrismaClientValidationError: \nInvalid `prisma.product.findMany()` invocation in\nC:\\Users\\hp\\Desktop\\ecoserver\\routes\\admin\\productAdminRoute.js:62:41\n\n  59 const skip = (page - 1) * limit;\n  60 const take = parseInt(limit)\n  61 \n→ 62 let products = await prisma.product.findMany({\n       orderBy: {\n         iat: \"desc\"\n       },\n       include: {\n         category: {\n         ~~~~~~~~\n           select: {\n             name: true,\n             id: true\n           }\n         },\n     ?   subcategory?: true,\n     ?   variants?: true,\n     ?   orderItems?: true,\n     ?   CartItems?: true,\n     ?   specialOffer?: true\n       },\n       take: 50,\n       skip: 0,\n       where: {}\n     })\n\nUnknown field `category` for include statement on model `Product`. Available options are marked with ?.\n    at wn (C:\\Users\\hp\\Desktop\\ecoserver\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at $n.handleRequestError (C:\\Users\\hp\\Desktop\\ecoserver\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at $n.handleAndLogRequestError (C:\\Users\\hp\\Desktop\\ecoserver\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Users\\hp\\Desktop\\ecoserver\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Users\\hp\\Desktop\\ecoserver\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async C:\\Users\\hp\\Desktop\\ecoserver\\routes\\admin\\productAdminRoute.js:62:20","method":"GET","path":"/admin/product/all?page=1&limit=50&name="}}

{"timestamp":"2025-01-31T21:21:23.801Z","level":"error","message":"Internal Server Error","meta":{"stack":"PrismaClientValidationError: \nInvalid `prisma.product.findMany()` invocation in\nC:\\Users\\hp\\Desktop\\ecoserver\\routes\\admin\\productAdminRoute.js:62:41\n\n  59 const skip = (page - 1) * limit;\n  60 const take = parseInt(limit)\n  61 \n→ 62 let products = await prisma.product.findMany({\n       orderBy: {\n         iat: \"desc\"\n       },\n       include: {\n         category: {\n         ~~~~~~~~\n           select: {\n             name: true,\n             id: true\n           }\n         },\n     ?   subcategory?: true,\n     ?   variants?: true,\n     ?   orderItems?: true,\n     ?   CartItems?: true,\n     ?   specialOffer?: true\n       },\n       take: 50,\n       skip: 0,\n       where: {}\n     })\n\nUnknown field `category` for include statement on model `Product`. Available options are marked with ?.\n    at wn (C:\\Users\\hp\\Desktop\\ecoserver\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at $n.handleRequestError (C:\\Users\\hp\\Desktop\\ecoserver\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at $n.handleAndLogRequestError (C:\\Users\\hp\\Desktop\\ecoserver\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Users\\hp\\Desktop\\ecoserver\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Users\\hp\\Desktop\\ecoserver\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async C:\\Users\\hp\\Desktop\\ecoserver\\routes\\admin\\productAdminRoute.js:62:20","method":"GET","path":"/admin/product/all?page=1&limit=50&name="}}

{"timestamp":"2025-01-31T21:21:25.852Z","level":"error","message":"Internal Server Error","meta":{"stack":"PrismaClientValidationError: \nInvalid `prisma.product.findMany()` invocation in\nC:\\Users\\hp\\Desktop\\ecoserver\\routes\\admin\\productAdminRoute.js:62:41\n\n  59 const skip = (page - 1) * limit;\n  60 const take = parseInt(limit)\n  61 \n→ 62 let products = await prisma.product.findMany({\n       orderBy: {\n         iat: \"desc\"\n       },\n       include: {\n         category: {\n         ~~~~~~~~\n           select: {\n             name: true,\n             id: true\n           }\n         },\n     ?   subcategory?: true,\n     ?   variants?: true,\n     ?   orderItems?: true,\n     ?   CartItems?: true,\n     ?   specialOffer?: true\n       },\n       take: 50,\n       skip: 0,\n       where: {}\n     })\n\nUnknown field `category` for include statement on model `Product`. Available options are marked with ?.\n    at wn (C:\\Users\\hp\\Desktop\\ecoserver\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at $n.handleRequestError (C:\\Users\\hp\\Desktop\\ecoserver\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at $n.handleAndLogRequestError (C:\\Users\\hp\\Desktop\\ecoserver\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Users\\hp\\Desktop\\ecoserver\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Users\\hp\\Desktop\\ecoserver\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async C:\\Users\\hp\\Desktop\\ecoserver\\routes\\admin\\productAdminRoute.js:62:20","method":"GET","path":"/admin/product/all?page=1&limit=50&name="}}

{"timestamp":"2025-01-31T21:21:29.889Z","level":"error","message":"Internal Server Error","meta":{"stack":"PrismaClientValidationError: \nInvalid `prisma.product.findMany()` invocation in\nC:\\Users\\hp\\Desktop\\ecoserver\\routes\\admin\\productAdminRoute.js:62:41\n\n  59 const skip = (page - 1) * limit;\n  60 const take = parseInt(limit)\n  61 \n→ 62 let products = await prisma.product.findMany({\n       orderBy: {\n         iat: \"desc\"\n       },\n       include: {\n         category: {\n         ~~~~~~~~\n           select: {\n             name: true,\n             id: true\n           }\n         },\n     ?   subcategory?: true,\n     ?   variants?: true,\n     ?   orderItems?: true,\n     ?   CartItems?: true,\n     ?   specialOffer?: true\n       },\n       take: 50,\n       skip: 0,\n       where: {}\n     })\n\nUnknown field `category` for include statement on model `Product`. Available options are marked with ?.\n    at wn (C:\\Users\\hp\\Desktop\\ecoserver\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at $n.handleRequestError (C:\\Users\\hp\\Desktop\\ecoserver\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at $n.handleAndLogRequestError (C:\\Users\\hp\\Desktop\\ecoserver\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Users\\hp\\Desktop\\ecoserver\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Users\\hp\\Desktop\\ecoserver\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async C:\\Users\\hp\\Desktop\\ecoserver\\routes\\admin\\productAdminRoute.js:62:20","method":"GET","path":"/admin/product/all?page=1&limit=50&name="}}

